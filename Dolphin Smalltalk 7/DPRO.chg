"6:51:37 PM, Tuesday, September 18, 2018: Compressed sources"!

DevelopmentSessionManager installNew!

SessionManager current defaultResourceLibrary loadFlags: 0.
SessionManager current stashBootInfo!

"Ensure all structures have calculated size to avoid recompilation messages later"
ExternalStructure allSubclasses do: [:e | e ensureDefined]!

"Mark all the booted packages as base"
Package manager markAllPackagesAsBase!

"Save the booted image"
| devsesh |
SourceManager default flushChanges.
devsesh := SessionManager current.
devsesh onPreSaveImage.
[devsesh primSnapshot: devsesh imageFileName
	backup: false
	type: 0
	maxObjects: 24576*1024
] ensure: [devsesh onPostSaveImage]!

"Remove unnecessary .chg files"
File delete: 'DBOOT.chg'!

SessionManager current onExit; primQuit: 0!

"11:53:26 AM, Tuesday, March 12, 2019: Dolphin Smalltalk Professional started"!

Presenter subclass: #LightsOutCell
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutCell guid: (GUID fromString: '{80d14d07-6fb0-4817-8a06-ad9283590b5a}')!
LightsOutCell comment: ''!
!LightsOutCell categoriesForClass!MVP-Presenters! !
View subclass: #LightsOutCellView
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutCellView guid: (GUID fromString: '{ed6d68fc-8bf8-4017-8c45-987205b1fe83}')!
LightsOutCellView comment: ''!
!LightsOutCellView categoriesForClass!MVP-Resources-Misc! !
!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value
	ifTrue: 
		[|cellRect canvas |
		cellRect = self clientRectangle insetBy: 5
		canvas = aPaintEvent canvas
		canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

!LightsOutCell methodsFor!
defaultModel
	^true asValue! !
!LightsOutCell categoriesFor: #defaultModel!public! !

!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value
	ifTrue: 
		[|cellRect canvas |
		cellRect = self clientRectangle insetBy: 5
		canvas = aPaintEvent canvas
		canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value
		ifTrue: 
			[|cellRect canvas |
			cellRect = self clientRectangle insetBy: 5
			canvas = aPaintEvent canvas
			canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value
		ifTrue: 
			[|cellRect canvas|
			cellRect = self clientRectangle insetBy: 5
			canvas = aPaintEvent canvas
			canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

!LightsOutCellView methodsFor!
onPaintRequired: aPaintEvent
	self model value
		ifTrue: 
			[|cellRect canvas|
			cellRect := self clientRectangle insetBy: 5.
			canvas := aPaintEvent canvas.
			canvas fillRectangle: cellRect color: self colorWhenOn]! !
!LightsOutCellView categoriesFor: #onPaintRequired:!public! !

	^ColorDialog showModal!

!LightsOutCellView methodsFor!
colorWhenOn
	^(RGB red: 255 green: 255 blue: 64)! !
!LightsOutCellView categoriesFor: #colorWhenOn!public! !

!LightsOutCellView class methodsFor!
defaultModel
	^true asValue! !
!LightsOutCellView class categoriesFor: #defaultModel!public! !

!LightsOutCellView methodsFor!
connectModel
	self model when: #valueChanged send: #invalidate to: self! !
!LightsOutCellView categoriesFor: #connectModel!public! !

!LightsOutCellView methodsFor!
onLeftButtonPressed: aMouseEvent
	self presenter trigger: #cellAction! !
!LightsOutCellView categoriesFor: #onLeftButtonPressed:!public! !

!LightsOutCellView class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true 524550 ##(Smalltalk.ColorRef) 8 4278190080 nil 5 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 1 1 706 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 100 0 0 0 100 0 0 0] 8 #() 706 193 193 nil 27 )! !
!LightsOutCellView class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutCell class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true 524550 ##(Smalltalk.ColorRef) 8 4278190080 nil 7 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3839 21 706 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 127 7 0 0 10 0 0 0 227 7 0 0 110 0 0 0] 8 #() 706 193 193 nil 27 )! !
!LightsOutCell class categoriesFor: #resource_Default_view!public!resources-views! !

loc := LightsOutCell show!

loc model value: false!

LightsOutCell removeSelector: #defaultModel ifAbsent: []!

!LightsOutCell class methodsFor!
defaultModel
	^true asValue! !
!LightsOutCell class categoriesFor: #defaultModel!public! !

!LightsOutCellView methodsFor!
onLeftButtonReleased: aMouseEvent
	self presenter trigger: #cellAction! !
!LightsOutCellView categoriesFor: #onLeftButtonReleased:!public! !

LightsOutCellView removeSelector: #onLeftButtonPressed: ifAbsent: []!

loc := LightsOutCell show!

loc model value: false!

loc model value: true!

Object subclass: #LightsOutBoard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutBoard guid: (GUID fromString: '{51448b75-7216-4dae-83c7-93355f65b038}')!
LightsOutBoard comment: ''!
!LightsOutBoard categoriesForClass!Kernel-Objects! !
!LightsOutBoard class methodsFor!
withSize: anInteger
	^super new setSize: anInteger! !
!LightsOutBoard class categoriesFor: #withSize:!public! !

!LightsOutBoard class methodsFor!
new
	^self withSize: self defaultSize! !
!LightsOutBoard class categoriesFor: #new!public! !

!LightsOutBoard class methodsFor!
defaultSize
	^10! !
!LightsOutBoard class categoriesFor: #defaultSize!public! !

Object subclass: #LightsOutBoard
	instanceVariableNames: 'cells'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutBoard methodsFor!
setSize: anInteger
	cells := (1 to: anInteger squared) collect: [:each|true asValue]! !
!LightsOutBoard categoriesFor: #setSize:!public! !

!LightsOutBoard methodsFor!
cells
	^cells! !
!LightsOutBoard categoriesFor: #cells!public! !

!LightsOutBoard methodsFor!
size
	^cells size sqrt truncated! !
!LightsOutBoard categoriesFor: #size!public! !

SmalltalkSearchPresenter subclass: #LightsOutGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutGame guid: (GUID fromString: '{98f72805-22c7-4fcd-b2f1-8d85e5ab7466}')!
LightsOutGame comment: ''!
!LightsOutGame categoriesForClass!Development! !
LightsOutGame removeFromSystem!

Shell subclass: #LightsOutGame
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
LightsOutGame guid: (GUID fromString: '{730a6330-0c39-41b4-bd5a-a561c1572646}')!
LightsOutGame comment: ''!
!LightsOutGame categoriesForClass!MVP-Presenters! !
!LightsOutGame class methodsFor!
defaultModel
	^LightsOutBoard new! !
!LightsOutGame class categoriesFor: #defaultModel!public! !

!LightsOutGame methodsFor!
onViewOpened
	super onViewOpened.
	self createCellPresenters! !
!LightsOutGame categoriesFor: #onViewOpened!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
self model cells do: 
			[:eachCell | 
			|cp
			|cp:= LightsOutCell createIn: self on: eachCell]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

Shell subclass: #LightsOutGame
	instanceVariableNames: 'cellPresenters'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!LightsOutGame methodsFor!
initialize
	super initialize.
	cellPresenters := OrderedCollection new! !
!LightsOutGame categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
self model cells do: 
			[:eachCell | 
			|cp
			|cp:= LightsOutCell createIn: self on: eachCell.
cellPresenters add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
clearExistingCellPresenters
	cellPresenters do: [:each|each destroy]! !
!LightsOutGame categoriesFor: #clearExistingCellPresenters!public! !

!LightsOutGame class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.ShellView) 34 27 nil nil 8 #(13303808 65536) 416 nil 196934 1 ##(Smalltalk.RGB) 33488897 nil 39 nil nil nil 416 656390 ##(Smalltalk.GridLayout) 3 1 1 1 170 192 8 #() nil nil nil nil nil 1 nil nil nil nil 1 nil nil 983302 ##(Smalltalk.MessageSequence) 138 144 34 3 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3839 21 674 1011 931 416 626 #text: 34 1 8 'Lights Out' 416 626 #updateMenuBar 544 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 127 7 0 0 10 0 0 0 120 9 0 0 219 1 0 0] 8 #() 674 193 193 nil 27 )! !
!LightsOutGame class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: 
				[:eachCell | 
				|cp|
				cp:= LightsOutCell createIn: self on: eachCell.
				cellPresenters add: cp]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutCell class methodsFor!
resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 4 788558 10 ##(Smalltalk.STBViewProxy) ##(Smalltalk.LightsOutCellView) 34 12 nil nil 34 2 8 1140850688 1 416 721990 2 ##(Smalltalk.ValueHolder) nil false 1310726 ##(Smalltalk.EqualitySearchPolicy) true nil nil 7 nil nil nil 416 983302 ##(Smalltalk.MessageSequence) 138 144 34 1 721670 ##(Smalltalk.MessageSend) #createAt:extent: 34 2 328198 ##(Smalltalk.Point) 3839 21 658 201 201 416 983302 ##(Smalltalk.WINDOWPLACEMENT) 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 127 7 0 0 10 0 0 0 227 7 0 0 110 0 0 0] 8 #() 658 193 193 nil 27 )! !
!LightsOutCell class categoriesFor: #resource_Default_view!public!resources-views! !

!LightsOutGame methodsFor!
createCellPresenters
	self clearExistingCellPresenters.
	self view layoutManager rows: self model size.
	self model cells do: 
				[:eachCell | 
				|cp|
				cp:= LightsOutCell createIn: self on: eachCell.
				cellPresenters add: cp.
				cp when: #cellAction perform: [self toggleNeighborsOf: cp]]! !
!LightsOutGame categoriesFor: #createCellPresenters!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
toggleNeighborsOf: aLightsOutCell 
	(self neighborsOf: aLightsOutCell) do: [:eachCell|eachCell toggle]! !
!LightsOutGame categoriesFor: #toggleNeighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	^Error notYetImplemented! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter  = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutCell methodsFor!
toggle
	^Error notYetImplemented! !
!LightsOutCell categoriesFor: #toggle!public! !

!LightsOutCell methodsFor!
toggle
	self model value: self model value not! !
!LightsOutCell categoriesFor: #toggle!public! !

!LightsOutGame methodsFor!
model: aLightsOutGameBoard
	super model: aLightsOutGameBoard.
	self hasView ifTrue: [self createCellPresenters]! !
!LightsOutGame categoriesFor: #model:!public! !

LightsOutGame createIconMethod!

!LightsOutGame class methodsFor!
icon

	"Generated from:
	self createIconMethod: #icon ofSize: 48@48 fromFile: 'C:\Users\dave tower\Pictures\Screenshots\Screenshot (2).png'.
	"
	^InternalIcon fromBytes: #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 48 0 0 0 48 8 6 0 0 0 87 2 249 135 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 9 112 72 89 115 0 0 14 195 0 0 14 195 1 199 111 168 100 0 0 5 68 73 68 65 84 104 67 237 89 107 108 84 85 16 222 80 49 17 4 129 34 136 175 66 36 81 65 49 24 95 96 84 72 181 24 21 4 42 85 81 170 245 29 53 26 140 239 16 133 21 74 105 75 91 145 62 236 131 210 210 118 219 165 47 186 148 66 91 250 194 5 4 65 13 213 138 193 34 10 149 6 21 40 32 196 82 198 51 151 189 39 115 246 206 38 151 238 194 74 114 127 124 63 206 151 239 187 123 38 61 115 102 230 212 102 155 15 224 141 134 246 185 0 48 73 98 100 202 31 6 205 165 159 253 171 104 218 14 69 195 152 212 189 10 231 218 253 145 193 231 11 21 109 243 20 239 184 244 61 176 171 51 70 225 250 47 58 9 39 187 35 228 186 163 43 18 172 0 116 252 175 2 152 238 216 4 111 84 87 72 12 88 124 194 160 9 89 208 163 104 102 151 213 193 144 37 93 10 247 104 225 22 131 207 23 30 41 220 170 120 67 227 143 192 211 165 27 21 174 175 253 52 188 182 118 141 92 199 84 214 128 237 254 220 239 225 21 151 75 226 154 164 67 240 88 209 102 133 27 16 107 12 160 143 8 128 106 162 86 55 194 224 184 46 133 123 184 224 107 8 75 57 168 112 183 101 236 129 123 178 127 80 184 81 41 29 16 177 106 187 194 13 89 114 20 102 57 155 20 238 18 17 128 247 62 108 153 59 18 149 63 83 120 254 55 1 61 66 211 28 110 133 123 191 206 1 9 238 116 133 155 89 210 108 250 8 121 239 195 10 64 71 208 2 152 152 211 10 207 85 172 151 24 177 244 79 152 178 106 155 194 93 30 251 143 193 136 57 64 53 211 139 55 193 160 184 99 10 23 158 183 3 174 75 238 84 184 91 210 218 225 142 204 159 20 46 44 249 32 76 94 185 83 225 6 139 11 225 113 199 87 10 199 230 128 129 16 192 228 121 103 131 83 98 224 226 227 6 13 135 80 145 120 212 135 65 113 58 14 211 196 102 169 247 202 248 195 172 238 173 154 82 169 121 213 85 213 251 58 192 33 208 117 128 211 5 172 144 113 176 2 32 94 191 2 120 66 228 192 220 245 78 137 115 201 1 234 59 183 28 112 43 222 161 62 115 160 76 106 176 184 105 183 208 243 162 36 235 192 91 136 51 206 114 54 74 77 180 184 17 240 22 162 190 25 197 45 172 207 31 224 45 68 127 3 111 161 57 229 27 228 58 106 117 3 95 7 184 143 237 59 18 37 53 221 61 225 108 29 224 124 254 192 84 51 103 5 224 65 208 2 184 143 233 70 185 143 205 46 171 151 154 151 170 214 178 221 40 231 243 7 120 153 208 223 192 28 120 97 77 181 92 63 43 90 120 219 228 188 157 240 230 186 114 137 107 147 58 181 219 131 114 3 197 60 128 165 92 95 191 94 93 201 254 32 182 192 212 135 109 57 167 227 128 243 0 245 158 157 7 234 21 78 159 7 244 117 76 229 58 243 205 156 247 17 226 54 17 232 58 208 235 28 176 2 240 224 130 4 128 99 223 135 245 133 18 97 98 179 120 246 40 119 69 220 113 237 220 235 107 236 233 185 77 12 21 231 150 250 48 9 57 29 135 153 37 45 138 119 88 194 97 120 81 36 44 229 250 218 187 225 221 218 98 185 198 60 176 221 149 213 166 221 48 58 174 74 252 75 235 227 41 215 63 214 56 72 224 45 68 53 190 18 22 111 53 170 187 57 245 87 86 135 183 33 213 225 108 193 233 158 20 213 87 215 204 192 86 197 236 17 242 254 144 217 58 192 77 100 156 174 215 205 156 21 128 7 65 11 32 210 217 12 241 238 12 137 209 203 126 215 70 53 202 225 124 234 253 161 16 81 84 168 6 147 203 91 131 24 35 206 60 213 77 90 249 45 171 195 66 73 117 35 18 249 174 56 182 37 75 106 230 53 228 131 109 108 218 94 152 82 176 77 34 52 254 40 220 153 217 166 112 151 45 60 5 15 228 126 39 215 17 98 232 231 62 142 195 63 245 221 254 229 110 86 199 97 124 198 207 138 23 31 211 238 205 217 165 112 248 26 104 240 94 108 117 192 224 181 2 32 8 74 0 88 128 62 105 204 147 24 245 121 7 68 139 177 141 114 88 84 222 174 41 149 107 45 121 188 63 36 128 111 57 212 247 84 233 70 86 199 1 199 67 234 29 158 240 183 214 121 82 14 43 177 193 107 32 4 240 197 58 178 164 89 162 159 136 28 219 93 125 141 101 31 43 49 213 96 98 99 219 77 185 137 34 9 185 239 115 152 144 221 170 120 177 125 225 116 88 125 117 141 246 124 207 137 204 28 33 174 14 4 250 8 113 58 67 29 224 68 86 0 30 4 45 0 252 247 77 202 214 47 36 112 84 252 180 49 87 174 147 182 164 106 149 152 106 62 174 47 208 58 89 202 189 92 229 50 124 219 23 176 117 166 222 171 151 242 179 121 226 230 52 169 177 55 173 0 219 141 203 127 211 158 182 117 112 109 3 98 66 78 171 212 96 59 208 103 193 25 197 119 119 214 143 218 53 71 185 113 233 191 104 51 2 229 174 79 238 20 237 202 126 133 195 219 235 214 180 118 133 227 158 244 17 216 17 232 26 172 212 108 29 224 140 189 61 66 254 252 131 131 219 135 169 110 148 51 90 1 120 16 240 0 240 13 104 97 75 182 196 13 203 14 176 198 247 106 29 82 99 111 94 161 37 49 245 97 165 30 38 170 39 229 230 148 215 194 77 203 247 41 28 142 142 56 135 83 110 172 8 252 153 178 58 133 195 11 129 219 199 252 166 92 169 249 160 174 136 191 133 176 42 78 45 114 75 244 91 116 10 30 20 127 25 125 141 237 7 86 98 170 193 164 194 22 152 114 56 111 227 70 40 135 9 140 51 2 229 124 245 254 120 89 80 93 136 189 71 171 190 250 250 161 252 237 231 191 14 152 61 66 220 62 76 61 171 112 70 43 0 15 206 127 0 145 240 31 112 105 30 42 100 249 21 54 0 0 0 0 73 69 78 68 174 66 96 130]! !
!LightsOutGame class categoriesFor: #icon!constants!public! !

!LightsOutGame class methodsFor!
initialize
	"
	self initialize
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize
	"
	self initialize
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize
	"
	self initialize
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
initialize
	"
	self initialize
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame class methodsFor!
uninitialize
	Smalltalk developmentSystem removeSystemFolderIconNamed: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #uninitialize!public! !

	self initialize!

	self initialize!

	self initialize!

!LightsOutGame class methodsFor!
initialize
	"
	self initialize
	"
	Smalltalk developmentSystem addSamplesFolderIconFor: self description: 'Lights Out Game'! !
!LightsOutGame class categoriesFor: #initialize!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter topCenter = cpRect leftCenter bottomCenter | (eachRect leftCenter bottomCenter = cpRect rightCenter topCenter)
		| (eachRect leftCenter topCenter  = cpRect rightCenter bottomCenter) | (eachRect rightCenter bottomCenter = cpRect leftCenter topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!Point methodsFor!
topCenter
	^Error notYetImplemented! !
!Point categoriesFor: #topCenter!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect topCenter | (eachRect topCenter = cpRect rightCenter)
		| (eachRect leftCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect leftCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = eachRect leftCenter | (eachRect leftCenter = eachRect rightCenter)
		| (eachRect topCenter = eachRect bottomCenter) | (eachRect bottomCenter = eachRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect topCenter | (eachRect topCenter = cpRect rightCenter)
		| (eachRect leftCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect leftCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect topCenter = cpRect leftCenter]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		cpRect rightCenter = cpRect leftCenter]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect left | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect rightCenter = cpRect leftCenter | (eachRect leftCenter = cpRect rightCenter)
		| (eachRect topCenter = cpRect bottomCenter) | (eachRect bottomCenter = cpRect topCenter)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

!LightsOutGame methodsFor!
neighborsOf: aLightsOutCell 
	|cpRect|
	cpRect := aLightsOutCell view rectangle.
	^cellPresenters select: [:each ||eachRect|
		eachRect := each view rectangle.
		eachRect topRight = cpRect bottomLeft | (eachRect bottomLeft = cpRect topRight)
		| (eachRect topLeft = cpRect bottomRight) | (eachRect bottomRight = cpRect topLeft)]! !
!LightsOutGame categoriesFor: #neighborsOf:!public! !

"4:29:53 PM, Tuesday, March 12, 2019: Image saved"!

"4:30:02 PM, Tuesday, March 12, 2019: Image saved"!

"4:30:16 PM, Tuesday, March 12, 2019: Dolphin Smalltalk Professional started"!

"4:30:25 PM, Tuesday, March 12, 2019: Image saved"!

